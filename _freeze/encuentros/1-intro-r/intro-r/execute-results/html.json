{
  "hash": "c39cd39769793e557c97ba39c4eaa9c4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Introducción a R base\nsubtitle: Fundamentos básicos del lenguaje\nauthor: \"[🔗 Estación R](https://estacion-r.netlify.app/)\"\ninstitution: Estación R\ndate: 2024-10-17\nfooter: \"[🔗 Introducción al Procesamiento de Datos con R](https://pablotis.github.io/intro-r-quarto/)\"\nlogo: \"../../img/Logo_PNG_Baja_Mesa de trabajo 1.png\"\n#title-slide-attributes:\n  #data-background-image: images/horst-teach-quarto.png\n  #data-background-size: stretch\n  #data-background-opacity: \"0.8\"\nformat: \n  revealjs: \n    theme: intro-r.scss\n    multiplex: true\n    transition: fade\n    progress: true\n    highlight-style: printing\n    embed-resources: true\n    code-line-numbers: false\n    code-block-bg: true\n    code-copy: true\ncode-block-border-left: \"#31BAE9\"\nexecute:\n  execute:\n  freeze: auto\n  echo: true\n---\n\n\n\n# Bienvenidos y bienvenidas a Estación R\n\n::::: columns\n::: {.column width=\"50%\"}\n💬 [Slack](https://join.slack.com/t/estacion-r/shared_invite/zt-2smy7t4ae-1KDZLHN1aqXmZXdKbc5buA)\n\n🔗 [Web](https://estacion-r.netlify.app/)\n\n🐘 [Mastodon](https://botsin.space/@r_tips)\n\n𝕏 [X](https://twitter.com/estacion_erre)\n\n✉️ [Correo](mailto:pablotiscornia@estacion-r.com)\n:::\n\n::: {.column width=\"50%\"}\n[Instagram](https://www.instagram.com/estacion_ere?igsh=OWhtcWR5ZGkwb3Bw&utm_source=qr)\n\n[LinkedIn](https://www.linkedin.com/company/estacion-r/)\n:::\n:::::\n\n# Sobre el curso\n\n-   Dinámica de la clase\n\n    ```         \n    - Ejercitación semanal\n\n    - Tp Integrador\n\n    - Grabación de encuentros\n    ```\n\n# Presentación\n\n👋 Presentate [acá](https://docs.google.com/document/d/17SKdiXxwbqve83sorSp0TsBLFoRb6Fs_6b7F25llE68/edit?tab=t.0)\n\n## Hoja de Ruta\n\n::::: columns\n::: {.column width=\"50%\"}\n📌 ¿Qué es R?\n\n📌 ¿Qué es la Ciencia de Datos?\n\n📌 R != Rstudio\n:::\n\n::: {.column width=\"50%\"}\n📌 Conceptos básicos de R\n\n```         \n  👉🏼 Valores\n\n  👉🏼 Vectores\n\n  👉🏼 Tipos / Clases\n\n  👉🏼 Data Frames\n```\n:::\n:::::\n\n# ¿Qué es R?\n\n## Primera impresión\n\n![](images/r_miedo.jpg)\n\n## Evolución emocional\n\n![](images/curva_r.png){fig-alt=\"r project console\"}\n\n## R ... {.center auto-animate=\"true\"}\n\n-   Es un lenguaje de programación especializado en análisis y visualización de datos.\n\n## R ... {.center auto-animate=\"true\"}\n\n-   Es de código abierto (se puede usar y modificar sin pagar licencias ni costos de ningún tipo)\n\n## R ... {.center auto-animate=\"true\"}\n\n-   Crece a partir del aporte de su comunidad (no depende de un departamento de desarrollo):\n    -   Academia (Universidades)\n    -   Investigación Científica (Centros de investigación, comunidad científica)\n    -   Sector privado (Facebook, Google, X, Uber, Airbnb, IBM, New York times)\n    -   Gente de a pie (personas o grupos de personas)\n\n## R ... {.center auto-animate=\"true\"}\n\n-   En el campo del análisis de datos, es la herramienta por excelencia en muchas universidades, empresas de tecnología, y redacciones de periodismo de datos.\n\n# ¿Qué es la Ciencia de Datos?\n\n## ¿Qué es la Ciencia de Datos?\n\n![](images/proceso_ciencia_datos.jpg){fig-alt=\"r project console\"}\n\n# R != Rstudio\n\n## R != Rstudio\n\n::::: columns\n::: {.column width=\"50%\"}\n![](images/r_console.png){fig-alt=\"r project console\"}\n:::\n\n::: {.column width=\"50%\"}\n![](images/consola_r_studio.png){fig-alt=\"R studio console\"}\n:::\n:::::\n\n## R != Rstudio\n\n::::: columns\n::: {.column width=\"50%\"}\n![](images/r_console.png){fig-alt=\"r project console\"}\n:::\n\n::: {.column width=\"50%\"}\n![](images/consola_r_studio_ok.png){fig-alt=\"R studio console\"}\n:::\n:::::\n\n# Vamos a Rstudio!\n\n## Puesta a punto ... {auto-animate=\"true\"}\n\n-   Identificar las 4 ventanas principales\n\n## Puesta a punto ... {auto-animate=\"true\"}\n\n-   Identificar las 4 ventanas principales ✅\n\n<br>\n\n-   Cambiar la apariencia de la plataforma\n\n## Puesta a punto ... {auto-animate=\"true\"}\n\n-   Identificar las 4 ventanas principales ✅\n\n<br>\n\n-   Cambiar la apariencia de la plataforma ✅\n\n<br>\n\n-   Setear en **Opciones Globales** (*Global Options*) la configuración **General**\n\n## Puesta a punto ... {auto-animate=\"true\"}\n\n-   Identificar las 4 ventanas principales ✅\n\n<br>\n\n-   Cambiar la apariencia de la plataforma ✅\n\n<br>\n\n-   Setear en **Opciones Globales** (*Global Options*) la configuración **General** ✅\n\n# Descanso\n\n\n\n::: {.cell}\n\n:::\n\n\n\n`<div class=\"countdown\" id=\"timer_f70b81b3\" data-warn-when=\"60\" data-update-every=\"1\" data-blink-colon=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>`{=html}\n\n# Conceptos básicos de R\n\n## Valores ... {.center auto-animate=\"true\"}\n\n## Valores ... {.center auto-animate=\"true\"}\n\n#### numéricos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n100\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 100\n```\n\n\n:::\n:::\n\n\n\n## Valores ... {.center auto-animate=\"true\"}\n\n#### de texto\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"cien\"\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"cien\"\n```\n\n\n:::\n:::\n\n\n\n## Valores ... {.center auto-animate=\"true\"}\n\n#### ¿?\n\n``` r\n\"100\"\n```\n\n## Vectores ... ¿variables? {.center auto-animate=\"true\"}\n\n## Vectores ... ¿variables? {.center auto-animate=\"true\"}\n\n#### numéricos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(100, 102, 200)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 100 102 200\n```\n\n\n:::\n:::\n\n\n\n## Vectores ... ¿variables? {.center auto-animate=\"true\"}\n\n#### de texto\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\"cien\", \"ciento dos\", \"doscientos\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"cien\"       \"ciento dos\" \"doscientos\"\n```\n\n\n:::\n:::\n\n\n\n## Vectores ... ¿variables? {.center auto-animate=\"true\"}\n\n#### de texto\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\"100\", \"102\", \"200\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"100\" \"102\" \"200\"\n```\n\n\n:::\n:::\n\n\n\n## Funciones\n\n-   Las funciones en R son el alma mater del lenguaje (de todos los lenguajes)\n\n-   ellas reciben un [input]{style=\"color: green;\"} y devuelven un [output]{style=\"color: red;\"}\n\n-   Siempre las encontrarás escrita así:\n\n`nombre_de_la_funcion(input)`\n\n## Funciones\n\n-   La función `class()` devuelve el tipo del valor o vector que le de ([input]{style=\"color: green;\"})\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n:::\n\n\n\n## Funciones\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(\"1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n:::\n\n\n\n## Funciones\n\n-   La función `length()` devuelve el largo del input (probemos con un vector):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(c(10, 20, 30))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n\n## Funciones\n\n-   La función `mean()` calcula el promedio de un input (tiene que ser si o si numérico):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(c(10, 20, 30))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 20\n```\n\n\n:::\n:::\n\n\n\n## Funciones\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(c(\"10\", \"20\", \"30\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NA\n```\n\n\n:::\n:::\n\n\n\n## Objectos\n\n-   Todo en R puede ser guardado en un objeto (un valor, un vector, el resutlado de una función, y más)\n\n## Objectos\n\n-   Todo en R puede ser guardado en un objeto (un valor, un vector, el resutlado de una función, y más)\n\n-   Para guardar *algo* en un objeto, tengo que seguir la siguiente estructura:\n\n``` r\nnombre_del_objeto <- algo\n```\n\n## Objectos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguardo_un_numero <- 1\n```\n:::\n\n\n\n## Objectos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguardo_un_numero\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n\n## Objectos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguardo_un_vector <- c(10, 20, 30)\n```\n:::\n\n\n\n## Objectos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguardo_un_vector\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10 20 30\n```\n\n\n:::\n:::\n\n\n\n## Objectos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguardo_un_resultado <- mean(c(20, 45, 23))\n```\n:::\n\n\n\n## Objectos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguardo_un_resultado\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 29.33333\n```\n\n\n:::\n:::\n\n\n\n## Objectos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobjeto_como_input <- c(20, 45, 23)\n\nmean(objeto_como_input)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 29.33333\n```\n\n\n:::\n:::\n\n\n\n# Ejercitación\n\n## Ejercitación\n\n-   Crear un objeto con los siguientes **5 valores numéricos: 17, 92, 56, 32 y 102**, y llamarlo `edad_personas`.\n\n-   Con la función `class()` chequear de qué tipo es el objeto.\n\n-   Con la función `length()` conocer la longitud de ese objeto (cuántos valores tiene).\n\n-   Calcular el promedio de esos valores (la edad promedio)\n\n# Data Frames\n\n## Data Frames\n\n-   Un Data Frame (o tabla) es la combinación de vectores (variables), que termina conformando una relación entre filas y columnas.\n\n-   Cada **vector** es una columna de un `dataframe`, y cada uno de sus valores, en el orden en que se encuentran, conforman las filas.\n\n## Data Frames\n\n-   Para crear un Data Frame puedo utilizar la función `data.frame()`, cuyos inputs son los vectores:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvector_edad <- c(20, 43, 102, 56)\nvector_nombre <- c(\"Pepe\", \"Pepa\", \"Rigoberto\", \"Rodoberta\")\n\nbase_personas <- data.frame(vector_edad,\n                            vector_nombre)\n```\n:::\n\n\n\n## Data Franes\n\n-   Así se ve un data.frame:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_personas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  vector_edad vector_nombre\n1          20          Pepe\n2          43          Pepa\n3         102     Rigoberto\n4          56     Rodoberta\n```\n\n\n:::\n:::\n\n\n\n# Accediendo a un Data Frames {.center}\n\n> Recordar este comando: `$`\n\n## Accediendo a un Data Frames\n\n-   Con el comando `$` (símbolo peso) puedo acceder a una columna del data frame:\n\n![](images/comnado_peso.png){width=\"20%\"}\n\n## Accediendo a un Data Frane\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_personas$vector_nombre\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Pepe\"      \"Pepa\"      \"Rigoberto\" \"Rodoberta\"\n```\n\n\n:::\n:::\n\n\n\n## Accediendo a un Data Frane\n\nEl resultado de `base_personas$vector_nombre` es nuevamente un vector, por lo que puedo:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(base_personas$vector_nombre)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(base_personas$vector_nombre)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n\n\n# Ejercitación\n\n## Ejercitación\n\n-   Crear un vector llamado `serie`, cuyos valores son: `\"Berlín\", \"The Crown\"` y `\"Vikings\"`.\n\n-   Crear un vector llamado `puntaje`, cuyos valores son (agregar puntaje a gusto),\n\n-   Crear un `data.frame` llamado `netflix`, que combine los vectores anteriores\n\n-   Calcular el puntaje promedio de las series de Netflix.\n\n## ¡Listo!\n\n-   Nos vemos el encuentro que viene.\n\n-   Seguimos la comunicación entre clase y clase por **Slack**\n\n-   [Acá](encuentros/1-intro-r/intro-r_ejercitacion) dejamos más ejercitación para seguir practicando\n",
    "supporting": [
      "intro-r_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}